
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author r00t
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
        changeTableFontAndAlign();
        this.setLocationRelativeTo(null);
        controllingMenuButtonsClick = new ControllingMenuButtonsClick();
        tableSortingAction = new TableSortingAction();
        tableSortingAction.sort(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bannerLabel = new javax.swing.JLabel();
        parentPanel = new javax.swing.JPanel();
        dashPanel = new javax.swing.JPanel();
        configPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOfHosts = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        IpPanel = new javax.swing.JPanel();
        firstOctet = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        secondOctet = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        thirdOctet = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        fourthOctet = new javax.swing.JTextField();
        hostNameTextField = new javax.swing.JTextField();
        descriptionTextField = new javax.swing.JTextField();
        addToTable = new javax.swing.JLabel();
        removeFromTable = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        clearTableButton = new javax.swing.JLabel();
        startMonitoring = new javax.swing.JLabel();
        stopMonitoring = new javax.swing.JLabel();
        startAllManitoring = new javax.swing.JLabel();
        smtpPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        databasePanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        dashMenuLabel = new javax.swing.JLabel();
        configMenuLabel = new javax.swing.JLabel();
        databaseMenuLabel = new javax.swing.JLabel();
        smtpMenuLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setFocusCycleRoot(false);

        bannerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/banner_edit.png"))); // NOI18N
        bannerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bannerLabelMouseClicked(evt);
            }
        });

        parentPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout dashPanelLayout = new javax.swing.GroupLayout(dashPanel);
        dashPanel.setLayout(dashPanelLayout);
        dashPanelLayout.setHorizontalGroup(
            dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1056, Short.MAX_VALUE)
        );
        dashPanelLayout.setVerticalGroup(
            dashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
        );

        parentPanel.add(dashPanel, "card2");

        tableOfHosts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IP address", "Hostname", "Description", "Monitoring Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableOfHosts);
        if (tableOfHosts.getColumnModel().getColumnCount() > 0) {
            tableOfHosts.getColumnModel().getColumn(0).setResizable(false);
            tableOfHosts.getColumnModel().getColumn(1).setResizable(false);
            tableOfHosts.getColumnModel().getColumn(2).setResizable(false);
            tableOfHosts.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.setBackground(new java.awt.Color(223, 223, 223));

        IpPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        firstOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        firstOctet.setBorder(null);
        firstOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstOctetFocusLost(evt);
            }
        });
        firstOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                firstOctetKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstOctetKeyPressed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(".");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel2.setOpaque(true);

        secondOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        secondOctet.setBorder(null);
        secondOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                secondOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                secondOctetFocusLost(evt);
            }
        });
        secondOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                secondOctetKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                secondOctetKeyPressed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(".");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel5.setOpaque(true);

        thirdOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        thirdOctet.setBorder(null);
        thirdOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                thirdOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                thirdOctetFocusLost(evt);
            }
        });
        thirdOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                thirdOctetKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                thirdOctetKeyPressed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(".");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel6.setOpaque(true);

        fourthOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fourthOctet.setBorder(null);
        fourthOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fourthOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fourthOctetFocusLost(evt);
            }
        });
        fourthOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fourthOctetKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fourthOctetKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout IpPanelLayout = new javax.swing.GroupLayout(IpPanel);
        IpPanel.setLayout(IpPanelLayout);
        IpPanelLayout.setHorizontalGroup(
            IpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IpPanelLayout.createSequentialGroup()
                .addComponent(firstOctet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(secondOctet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(thirdOctet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel6)
                .addGap(0, 0, 0)
                .addComponent(fourthOctet, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
        );
        IpPanelLayout.setVerticalGroup(
            IpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IpPanelLayout.createSequentialGroup()
                .addGroup(IpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(secondOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(thirdOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(fourthOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IpPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(firstOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hostNameTextField.setForeground(Color.GRAY);
        hostNameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hostNameTextField.setText("Hostname");
        hostNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hostNameTextFieldFocusGained(evt);
            }
        });

        descriptionTextField.setForeground(Color.GRAY);
        descriptionTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        descriptionTextField.setText("Description");
        descriptionTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                descriptionTextFieldFocusGained(evt);
            }
        });

        addToTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addToTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/add.png"))); // NOI18N
        addToTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addToTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addToTableMouseReleased(evt);
            }
        });

        removeFromTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeFromTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/minus.png"))); // NOI18N
        removeFromTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        removeFromTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeFromTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                removeFromTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeFromTableMouseReleased(evt);
            }
        });

        jLabel1.setText("IP Address: ");

        clearTableButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clearTableButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/clear_all_button.png"))); // NOI18N
        clearTableButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearTableButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearTableButtonMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clearTableButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                clearTableButtonMouseReleased(evt);
            }
        });

        startMonitoring.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startMonitoring.setText("start");
        startMonitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        startMonitoring.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startMonitoringMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startMonitoringMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startMonitoringMouseReleased(evt);
            }
        });

        stopMonitoring.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stopMonitoring.setText("stop");
        stopMonitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        stopMonitoring.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopMonitoringMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stopMonitoringMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                stopMonitoringMouseReleased(evt);
            }
        });

        startAllManitoring.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startAllManitoring.setText("all");
        startAllManitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        startAllManitoring.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startAllManitoringMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startAllManitoringMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startAllManitoringMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(IpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hostNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addToTable, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeFromTable, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startMonitoring, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stopMonitoring, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(startAllManitoring, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeFromTable, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addToTable, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(stopMonitoring, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(startAllManitoring, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(startMonitoring, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(hostNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap())
        );

        parentPanel.add(configPanel, "card3");

        jLabel3.setText("smtp");

        javax.swing.GroupLayout smtpPanelLayout = new javax.swing.GroupLayout(smtpPanel);
        smtpPanel.setLayout(smtpPanelLayout);
        smtpPanelLayout.setHorizontalGroup(
            smtpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(smtpPanelLayout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(jLabel3)
                .addContainerGap(814, Short.MAX_VALUE))
        );
        smtpPanelLayout.setVerticalGroup(
            smtpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(smtpPanelLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel3)
                .addContainerGap(422, Short.MAX_VALUE))
        );

        parentPanel.add(smtpPanel, "card4");

        jLabel4.setText("database");

        javax.swing.GroupLayout databasePanelLayout = new javax.swing.GroupLayout(databasePanel);
        databasePanel.setLayout(databasePanelLayout);
        databasePanelLayout.setHorizontalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jLabel4)
                .addContainerGap(712, Short.MAX_VALUE))
        );
        databasePanelLayout.setVerticalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel4)
                .addContainerGap(391, Short.MAX_VALUE))
        );

        parentPanel.add(databasePanel, "card5");

        buttonsPanel.setBackground(new java.awt.Color(123, 123, 123));

        dashMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashMenuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/dash.png"))); // NOI18N
        dashMenuLabel.setToolTipText("");
        dashMenuLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashMenuLabelMouseClicked(evt);
            }
        });

        configMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        configMenuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/config.png"))); // NOI18N
        configMenuLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                configMenuLabelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                configMenuLabelMousePressed(evt);
            }
        });

        databaseMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        databaseMenuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/report.png"))); // NOI18N
        databaseMenuLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                databaseMenuLabelMouseClicked(evt);
            }
        });

        smtpMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        smtpMenuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/mail_e.png"))); // NOI18N
        smtpMenuLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                smtpMenuLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(configMenuLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dashMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonsPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(smtpMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(databaseMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addComponent(dashMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(configMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(smtpMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(databaseMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bannerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(parentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bannerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashMenuLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashMenuLabelMouseClicked
        ControllingMenuButtonsClick.isDashMenuSelected = true;
        controllingMenuButtonsClick.dashMenuCheckAndCorrectFlags(this);
        controllingMenuButtonsClick.changeMenuAction(this);
    }//GEN-LAST:event_dashMenuLabelMouseClicked

    private void configMenuLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configMenuLabelMouseClicked
        ControllingMenuButtonsClick.isConfigMenuSelected = true;
        controllingMenuButtonsClick.configMenuCheckAndCorrectFlags(this);
        controllingMenuButtonsClick.changeMenuAction(this);
    }//GEN-LAST:event_configMenuLabelMouseClicked

    private void smtpMenuLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smtpMenuLabelMouseClicked
        ControllingMenuButtonsClick.isSmtpMenuSelected = true;
        controllingMenuButtonsClick.smtpMenuCheckAndCorrectFlags(this);
        controllingMenuButtonsClick.changeMenuAction(this);
    }//GEN-LAST:event_smtpMenuLabelMouseClicked

    private void databaseMenuLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_databaseMenuLabelMouseClicked
        ControllingMenuButtonsClick.isDatabaseMenuSelected = true;
        controllingMenuButtonsClick.databaseMenuCheckAndCorrectFlags(this);
        controllingMenuButtonsClick.changeMenuAction(this);
    }//GEN-LAST:event_databaseMenuLabelMouseClicked

    private void removeFromTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeFromTableMousePressed
        removeFromTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    }//GEN-LAST:event_removeFromTableMousePressed

    private void removeFromTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeFromTableMouseReleased
        removeFromTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_removeFromTableMouseReleased

    private void removeFromTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeFromTableMouseClicked
        addToTableClass = new AddToTable();
        addToTableClass.deleteRecord(this);
    }//GEN-LAST:event_removeFromTableMouseClicked

    private void addToTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToTableMousePressed
        addToTable.requestFocus();
        addToTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    }//GEN-LAST:event_addToTableMousePressed

    private void addToTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToTableMouseReleased
        addToTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_addToTableMouseReleased

    private void addToTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToTableMouseClicked
        addToTableClass = new AddToTable();
        addToTableClass.addRecord(this);
        

    }//GEN-LAST:event_addToTableMouseClicked

    private void firstOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstOctetFocusGained
        firstOctet.setCaretPosition(0);
        firstOctet.selectAll();
    }//GEN-LAST:event_firstOctetFocusGained

    private void firstOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstOctetFocusLost
        firstPress = false;
        if (fInt > 0 && fInt < 224) {
        } else {
            firstOctet.setText("");
        }
        if (firstOctet.getText().length() > 1) {
            if (firstOctet.getText().startsWith("0")) {
                firstOctet.setText("");
            }
        }
    }//GEN-LAST:event_firstOctetFocusLost

    private void firstOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!firstPress) {
                fInt = 0;
                fStr = "";
                firstPress = true;
                firstOctet.setText("");
            }
        }
    }//GEN-LAST:event_firstOctetKeyPressed

    private void firstOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstOctetKeyTyped
        char c = evt.getKeyChar();

        if (evt.getKeyChar() == '.') {
            secondOctet.requestFocus();
        }

        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            fStr += Character.toString(evt.getKeyChar());
            fInt = Integer.parseInt(fStr);
        }

        if (firstOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_firstOctetKeyTyped

    private void secondOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondOctetFocusGained
        secondOctet.setCaretPosition(0);
        secondOctet.selectAll();
    }//GEN-LAST:event_secondOctetFocusGained

    private void secondOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondOctetFocusLost
        secondPress = false;
        if (sInt > -1 && sInt < 256) {
        } else {
            secondOctet.setText("");
        }
        if (secondOctet.getText().length() > 1) {
            if (secondOctet.getText().startsWith("0")) {
                secondOctet.setText("");
            }
        }
    }//GEN-LAST:event_secondOctetFocusLost

    private void secondOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!secondPress) {
                sInt = 0;
                sStr = "";
                secondPress = true;
                secondOctet.setText("");
            }
        }
    }//GEN-LAST:event_secondOctetKeyPressed

    private void secondOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondOctetKeyTyped
        char c = evt.getKeyChar();

        if (evt.getKeyChar() == '.') {
            thirdOctet.requestFocus();
        }

        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            sStr += Character.toString(evt.getKeyChar());
            sInt = Integer.parseInt(sStr);
        }

        if (secondOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_secondOctetKeyTyped

    private void thirdOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_thirdOctetFocusGained
        thirdOctet.setCaretPosition(0);
        thirdOctet.selectAll();
    }//GEN-LAST:event_thirdOctetFocusGained

    private void thirdOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_thirdOctetFocusLost
        thirdPress = false;
        if (tInt > -1 && tInt < 256) {
        } else {
            thirdOctet.setText("");
        }
        if (thirdOctet.getText().length() > 1) {
            if (thirdOctet.getText().startsWith("0")) {
                thirdOctet.setText("");
            }
        }
    }//GEN-LAST:event_thirdOctetFocusLost

    private void thirdOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_thirdOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!thirdPress) {
                tInt = 0;
                tStr = "";
                thirdPress = true;
                thirdOctet.setText("");
            }
        }
    }//GEN-LAST:event_thirdOctetKeyPressed

    private void thirdOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_thirdOctetKeyTyped
        char c = evt.getKeyChar();

        if (evt.getKeyChar() == '.') {
            fourthOctet.requestFocus();
        }

        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            tStr += Character.toString(evt.getKeyChar());
            tInt = Integer.parseInt(tStr);
        }

        if (thirdOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_thirdOctetKeyTyped

    private void fourthOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fourthOctetFocusGained
        fourthOctet.setCaretPosition(0);
        fourthOctet.selectAll();
    }//GEN-LAST:event_fourthOctetFocusGained

    private void fourthOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fourthOctetFocusLost
        fourthPress = false;
        if (fourInt > -1 && fourInt < 256) {
        } else {
            fourthOctet.setText("");
        }
        if (fourthOctet.getText().length() > 1) {
            if (fourthOctet.getText().startsWith("0")) {
                fourthOctet.setText("");
            }
        }
    }//GEN-LAST:event_fourthOctetFocusLost

    private void fourthOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fourthOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!fourthPress) {
                fourInt = 0;
                fourStr = "";
                fourthPress = true;
                fourthOctet.setText("");
            }
        }
    }//GEN-LAST:event_fourthOctetKeyPressed

    private void fourthOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fourthOctetKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            fourStr += Character.toString(evt.getKeyChar());
            fourInt = Integer.parseInt(fourStr);
        }

        if (fourthOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_fourthOctetKeyTyped

    private void hostNameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hostNameTextFieldFocusGained
        if (hostNameTextField.getText().equals("Hostname") && hostNameTextField.getForeground().toString().endsWith("b=128]")) {
            hostNameTextField.setText("");
            hostNameTextField.setForeground(Color.BLACK);
        }

        hostNameTextField.selectAll();
    }//GEN-LAST:event_hostNameTextFieldFocusGained

    private void descriptionTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionTextFieldFocusGained
        if (descriptionTextField.getText().equals("Description") && descriptionTextField.getForeground().toString().endsWith("b=128]")) {
            descriptionTextField.setText("");
            descriptionTextField.setForeground(Color.BLACK);
        }

        descriptionTextField.selectAll();
    }//GEN-LAST:event_descriptionTextFieldFocusGained

    private void bannerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bannerLabelMouseClicked
        System.out.println("Width: " + this.getWidth());
        System.out.println("Height: " + this.getHeight());

    }//GEN-LAST:event_bannerLabelMouseClicked

    private void clearTableButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearTableButtonMouseClicked
        DefaultTableModel defaultTableModel = (DefaultTableModel) tableOfHosts.getModel();
        defaultTableModel.setRowCount(0);
    }//GEN-LAST:event_clearTableButtonMouseClicked

    private void clearTableButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearTableButtonMousePressed
        clearTableButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    }//GEN-LAST:event_clearTableButtonMousePressed

    private void clearTableButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearTableButtonMouseReleased
        clearTableButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_clearTableButtonMouseReleased

    private void startMonitoringMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMonitoringMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_startMonitoringMouseClicked

    private void startMonitoringMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMonitoringMousePressed
        startMonitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    }//GEN-LAST:event_startMonitoringMousePressed

    private void startMonitoringMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMonitoringMouseReleased
        startMonitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_startMonitoringMouseReleased

    private void stopMonitoringMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMonitoringMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_stopMonitoringMouseClicked

    private void stopMonitoringMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMonitoringMousePressed
        stopMonitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    }//GEN-LAST:event_stopMonitoringMousePressed

    private void stopMonitoringMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMonitoringMouseReleased
        stopMonitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_stopMonitoringMouseReleased

    private void startAllManitoringMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startAllManitoringMouseClicked

    }//GEN-LAST:event_startAllManitoringMouseClicked

    private void startAllManitoringMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startAllManitoringMousePressed
        startAllManitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    }//GEN-LAST:event_startAllManitoringMousePressed

    private void startAllManitoringMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startAllManitoringMouseReleased
        startAllManitoring.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_startAllManitoringMouseReleased

    private void configMenuLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configMenuLabelMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_configMenuLabelMousePressed

    public void changeTableFontAndAlign() {
        DefaultTableCellRenderer render = new DefaultTableCellRenderer();
        MyRendererStatus myRendererStatus = new MyRendererStatus();
        MyRendererIP myRendererIP = new MyRendererIP();
        
        
        render.setHorizontalAlignment(JLabel.CENTER);

        tableOfHosts.getColumnModel().getColumn(0).setCellRenderer(myRendererIP);
        tableOfHosts.getColumnModel().getColumn(1).setCellRenderer(render);
        tableOfHosts.getColumnModel().getColumn(2).setCellRenderer(render);
        tableOfHosts.getColumnModel().getColumn(3).setCellRenderer(myRendererStatus);

        tableOfHosts.getTableHeader().setFont(new Font("Consolas", Font.PLAIN, 15));
        tableOfHosts.setFont(new Font("Consolas", Font.PLAIN, 14));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }

        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }


        //</editor-fold>
        /* Create and display the form */ java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    //my variables
    ControllingMenuButtonsClick controllingMenuButtonsClick;
    AddToTable addToTableClass;
    TableSortingAction tableSortingAction;
    static int currentRowNumber = 0; 

    //IP Panel variables
    int fInt = 0;
    String fStr = "";
    int sInt = 0;
    ;
    String sStr = "";
    int tInt = 0;
    ;
    String tStr = "";
    int fourInt = 0;
    String fourStr = "";

    boolean firstPress = false;
    boolean secondPress = false;
    boolean thirdPress = false;
    boolean fourthPress = false;

    public static String PASSWORD;
    public static String LOGIN;
    static String ip;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel IpPanel;
    private javax.swing.JLabel addToTable;
    public javax.swing.JLabel bannerLabel;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JLabel clearTableButton;
    public javax.swing.JLabel configMenuLabel;
    public javax.swing.JPanel configPanel;
    public javax.swing.JLabel dashMenuLabel;
    public javax.swing.JPanel dashPanel;
    public javax.swing.JLabel databaseMenuLabel;
    public javax.swing.JPanel databasePanel;
    public javax.swing.JTextField descriptionTextField;
    public javax.swing.JTextField firstOctet;
    public javax.swing.JTextField fourthOctet;
    public javax.swing.JTextField hostNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel parentPanel;
    private javax.swing.JLabel removeFromTable;
    public javax.swing.JTextField secondOctet;
    public javax.swing.JLabel smtpMenuLabel;
    public javax.swing.JPanel smtpPanel;
    private javax.swing.JLabel startAllManitoring;
    private javax.swing.JLabel startMonitoring;
    private javax.swing.JLabel stopMonitoring;
    public javax.swing.JTable tableOfHosts;
    public javax.swing.JTextField thirdOctet;
    // End of variables declaration//GEN-END:variables
}
